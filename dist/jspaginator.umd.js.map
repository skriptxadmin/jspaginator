{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AEAO,SAAU,0CAAc,GAAG,EAAE,OAAY,EAAE,EAAE,aAAqB,EAAE,EAAE,aAAa,CAAC,CAAC;IACxF,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,IAAK,IAAI,OAAO,WACZ,KAAK,YAAY,CAAC,KAAK,UAAU,CAAC,IAAI;IAE1C,MAAM,oBAAoB,WAAW,IAAI;IACzC,IAAI,mBAAmB;QACnB,MAAM,qBAAqB,kBAAkB,KAAK,CAAC;QACnD,MAAM,mBAAmB,mBAAmB,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,IAAI,MAAM,CAAC,CAAA,IAAK;QAC3E,iBAAiB,OAAO,CAAC,CAAA;YACrB,KAAK,SAAS,CAAC,GAAG,CAAC;QACvB;IACJ;IAEA,KAAK,SAAS,GAAG;IAEjB,OAAO;AACX;;;;ACdO,SAAS,0CAAkB,OAAO,EAAE,YAAY,EAAE,aAAwB,CAAC,CAAC;IAC/E,IAAI,IAAI,KAAK;IACb,KAAK,CAAA,GAAA,yCAAY,EAAE,MAAM,IAAI,YAAY;IACzC,MAAM,CAAA,GAAA,yCAAY,EAAE,UAAU,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,EAAE,YAAY,SAAO,WAAW,MAAM,GAAC,IAAI;IACnG,OAAO,CAAA,GAAA,yCAAY,EAAE,QAAQ,SAAS,YAAY;IAClD,IAAI,MAAM,CAAC;IACX,GAAG,MAAM,CAAC;IACV,OAAO;AACX;;;;ACVO,SAAS,0CAAgB,MAAM,EAAE,cAAc,EAAE,GAAG;IAEvD,IAAI,QAAQ,MAAM,eAAe,MAAM;QACnC,IAAI,OAAO,IAAI,CAAC,IAAI,EAAE;YAClB,MAAM,UAAU,QAAQ,IAAI,CAAC,IAAI,EAAE,WAAW;YAC9C,IAAG,CAAC,SACA,OAAO;YAEX,OAAO,CAAA,GAAA,yCAAgB,EAAE,SAAS,KAAK,OAAO,UAAU;QAE5D;QAEA,OAAO;IAEX;IAEA,OAAO,CAAA,GAAA,yCAAgB,EAAE,gBAAgB,KAAK,OAAO,UAAU;AAEnE;;;ACnBO,SAAS,0CAAU,GAAG,EAAE,WAAW;IACtC,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,WACxB,IAAI,OAAO,CAAC,MAAM,SAAS,CAAC,MAAM,CAAC;IAEvC,IAAI,eAAe,CAAC;IACpB,IAAI,SAAS,CAAC,MAAM,CAAC;AACzB;;;ACNO,SAAW,0CAAW,GAAG,EAAE,WAAW;IACzC,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,WACxB,IAAI,OAAO,CAAC,MAAM,SAAS,CAAC,GAAG,CAAC;IAEpC,IAAI,YAAY,CAAC,YAAY;IAC7B,IAAI,SAAS,CAAC,GAAG,CAAC;AACtB;;;ALCO,MAAM;IAYT,IAAI,WAAW;QAEX,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI;IACnC;IAEA,IAAI,QAAQ;QAER,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,EAAE;IAClD;IACA,IAAI,eAAoB;QAEpB,OAAO,IAAI,CAAC,MAAM,EAAE,gBAAgB;IACxC;IAEA,IAAI,aAAkB;QAElB,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY;IACnD;IAEA,IAAI,QAAa;QAEb,OAAQ,AAAC,CAAA,IAAI,CAAC,WAAW,GAAG,CAAA,IAAM,IAAI,CAAC,YAAY;IACvD;IAEA,IAAI,MAAW;QAEX,IAAI,MAAM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY;QAExC,IAAI,MAAM,IAAI,CAAC,KAAK,EAEhB,MAAM,IAAI,CAAC,KAAK;QAEpB,OAAO;IACX;IAEA,IAAI,cAAc;QAEd,OAAO,IAAI,CAAC,MAAM,EAAE,YAAY,UAAU;IAC9C;IAEA,IAAI,aAAa;QAEb,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,YACnB,OAAO,SAAS,IAAI,CAAC,MAAM,EAAE,MAAM;QAGvC,OAAO;IACX;IACA,YAAY,MAAM,EAAE,MAAM,CAAE;aApD5B,cAAsB;aAEtB,eAAuB,IAAI,CAAC,WAAW;QAoDnC,IAAI,CAAC,QAAQ,QAAQ;YAEjB,QAAQ,KAAK,CAAC;YAEd;QACJ;QAEA,IAAI,CAAC,OAAO,UAAU,EAAE;YAEpB,QAAQ,KAAK,CAAC;YAEd;QAEJ;QAEA,IAAI,CAAC,MAAM,GAAG;QAEd,IAAI,CAAC,UAAU,GAAG,OAAO,UAAU;QAEnC,IAAI,CAAC,MAAM,GAAG;QAEd,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW;YAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW;QACxC;QAEA,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG;QAG5B,IAAI,CAAC,SAAS;QAGd,IAAI,CAAC,cAAc;QAEnB,IAAI,CAAC,SAAS;IAElB;IAGA,iBAAiB;QAEb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAErB;QAGJ,IAAI,YAAiB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAEnD,IAAI,CAAC,WAAW;YACZ,YAAY,CAAA,GAAA,yCAAY,EAAE,OAAO,IAAI;YACrC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC3B;QAEA,MAAM,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChC,OAAO,CAAC,UAAU,AAAC,CAAA,IAAI,CAAC,KAAK,GAAG,CAAA,EAAG,QAAQ,IAC3C,OAAO,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,IACjC,OAAO,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAC3C,OAAO,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,QAAQ;QAC1C,UAAU,SAAS,GAAG;IAE1B;IAEA,YAAY;QACR,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAClB;QAEJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO;YACxB,MAAM,KAAK,CAAC,OAAO,GAAG;YACtB,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,CAAC,GAAG,EACvC,MAAM,KAAK,CAAC,OAAO,GAAG;QAE9B;IACJ;IAEA,YAAY;QAER,IAAI;QAEJ,MAAM,KAAK,CAAA,GAAA,yCAAY,EAAE,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,YAAY;QAE5D,KAAK,CAAA,GAAA,yCAAc,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW;QAE7C,IAAI,IAEA,GAAG,MAAM,CAAC;QAId,KAAK,CAAA,GAAA,yCAAc,EAAE,IAAI,CAAC,MAAM,EAAE,YAAY;QAE9C,IAAI,IAEA,GAAG,MAAM,CAAC;QAId,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,eAAe,WACjC;YAAA,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EACvB,IAAI,CAAC,YAAY,CAAC;QACtB,OAIA,IAAI,CAAC,YAAY,CAAC;QAMtB,KAAK,CAAA,GAAA,yCAAc,EAAE,IAAI,CAAC,MAAM,EAAE,YAAY;QAE9C,IAAI,IAEA,GAAG,MAAM,CAAC;QAId,KAAK,CAAA,GAAA,yCAAc,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW;QAE7C,IAAI,IAEA,GAAG,MAAM,CAAC;QAKd,MAAM,MAAM,CAAA,GAAA,yCAAY,EAAE,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE,YAAY;QAE9D,IAAI,MAAM,CAAC;QAEX,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAEvB,IAAI,CAAC,iBAAiB;QAEtB,IAAI,CAAC,aAAa;QAElB,IAAI,CAAC,cAAc;IAEvB;IAEA,gBAAgB;QAEZ,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAE1C,MAAM,SAAc,KAAK,cAAc;QAEvC,IAAI,CAAC,QAED;QAGJ,IAAI,CAAC,YAAY;QAEjB,OAAO,gBAAgB,CAAC,UAAU;YAE9B,IAAI,CAAC,YAAY,GAAG,SAAS,OAAO,KAAK;YAEzC,IAAI,CAAC,YAAY;QAErB;IACJ;IAEA,oBAAoB;QAEhB,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAE1C,MAAM,UAAe,KAAK,iBAAiB;QAE3C,IAAI,CAAC,SAAS,QAEV;QAEJ,QAAQ,OAAO,CAAC,CAAA;YAEZ,IAAI,gBAAgB,CAAC,SAAS;gBAE1B,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,WACvB,IAAI,CAAC,YAAY,GAAG,SAAS,IAAI,SAAS;gBAE9C,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,UACvB,IAAI,CAAC,YAAY,GAAG;gBAExB,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,SACvB,IAAI,CAAC,YAAY,GAAG,SAAS,IAAI,CAAC,UAAU;gBAEhD,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,SACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,GAAG;gBAE3C,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,SACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,GAAG;gBAG3C,IAAI,IAAI,CAAC,YAAY,GAAG,GACpB,IAAI,CAAC,YAAY,GAAG;gBAExB,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,EACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU;gBAGvC,IAAI,CAAC,YAAY;YACrB;QACJ;IACJ;IAEA,eAAe;QACX,IAAI,CAAC,gBAAgB;QACrB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACpB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG;YAC5B;QACJ;QACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY;QACpC,IAAI,CAAC,cAAc;QACnB,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,cAAc;QACnB,IAAI,CAAC,YAAY;IAErB;IAEA,eAAe;QAEX,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAE1C,MAAM,SAAc,KAAK,cAAc;QAEvC,IAAI,CAAC,QAED;QAIJ,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,IACzC,OAAO,KAAK,GAAG,IAAI,CAAC,WAAW;IAEvC;IAEA,mBAAmB;QAEf,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,mBAAmB,OAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,IAAK,YAEnF,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAAE,MAAM,IAAI,CAAC,WAAW;YAAE,KAAK,IAAI,CAAC,YAAY;QAAC;IAElF;IAEA,aAAa,EAAE,EAAE;QACb,IAAI;QACJ,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE;YAEnC,MAAM,SAAS,CAAA,GAAA,yCAAY,EAAE,UAAU,IAAI,IAAI,CAAC,MAAM,EAAE,YAAY;YACpE,IAAK,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,UAAU,EAAE,IAAK;gBACvC,MAAM,SAAS,CAAA,GAAA,yCAAY,EAAE,UAAU,GAAG,IAAI;oBAAE,OAAO;gBAAE;gBAEzD,OAAO,MAAM,CAAC;YAElB;YACA,MAAM,KAAK,CAAA,GAAA,yCAAY,EAAE;YACzB,MAAM,MAAM,CAAA,GAAA,yCAAY,EAAE,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE,YAAY;YAC9D,IAAI,MAAM,CAAC;YACX,GAAG,MAAM,CAAC;YACV,GAAG,MAAM,CAAC;QAEd,OAEI,IAAK,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,UAAU,EAAE,IAAK;YAEvC,KAAK,CAAA,GAAA,yCAAgB,EAAE,GAAG,UAAU,IAAI,CAAC,MAAM,CAAC,UAAU;YAE1D,GAAG,MAAM,CAAC;QAEd;IAER;IAEA,iBAAiB;QACb,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAE1C,MAAM,UAAe,KAAK,iBAAiB;QAE3C,QAAQ,OAAO,CAAC,CAAA;YAEZ,CAAA,GAAA,yCAAQ,EAAE,KAAK,IAAI,CAAC,WAAW;YAE/B,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,WAEvB;gBAAA,IAAI,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC,WAAW,EAE3C,CAAA,GAAA,yCAAS,EAAE,KAAK,IAAI,CAAC,WAAW;YACpC;YAGJ,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,YAAY,IAAI,SAAS,CAAC,QAAQ,CAAC,SAE1D;gBAAA,IAAI,IAAI,CAAC,WAAW,IAAI,GAEpB,CAAA,GAAA,yCAAS,EAAE,KAAK,IAAI,CAAC,WAAW;YACpC;YAGJ,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,CAAC,QAAQ,CAAC,SAEzD;gBAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,EAEnC,CAAA,GAAA,yCAAS,EAAE,KAAK,IAAI,CAAC,WAAW;YACpC;QAKR;IACJ;AAEJ","sources":["src/index.ts","src/jspaginator.ts","src/helpers/CreateElement.ts","src/helpers/CreateListElement.ts","src/helpers/CreateNavButton.ts","src/helpers/EnableBtn.ts","src/helpers/DisableBtn.ts"],"sourcesContent":["export * from './jspaginator';","import { CreateElement } from './helpers/CreateElement';\r\nimport { Config } from './interfaces/Config';\r\nimport { CreateListElement } from './helpers/CreateListElement';\r\nimport { CreateNavButton } from './helpers/CreateNavButton';\r\nimport { EnableBtn } from './helpers/EnableBtn';\r\nimport { DisableBtn } from './helpers/DisableBtn';\r\n\r\nexport class Paginator {\r\n\r\n    paginator$: HTMLElement;\r\n\r\n    items$: HTMLElement[];\r\n\r\n    config: Config;\r\n\r\n    currentPage: number = 1;\r\n\r\n    pageSelected: number = this.currentPage;\r\n\r\n    get filtered() {\r\n\r\n        return this.config.filtered || 0;\r\n    }\r\n\r\n    get total() {\r\n\r\n        return this.config.totalItems || this.items$?.length\r\n    }\r\n    get itemsPerPage(): any {\r\n\r\n        return this.config?.itemsPerPage || 10;\r\n    }\r\n\r\n    get totalPages(): any {\r\n\r\n        return Math.ceil(this.total / this.itemsPerPage)\r\n    }\r\n\r\n    get start(): any {\r\n\r\n        return ((this.currentPage - 1) * (this.itemsPerPage));\r\n    }\r\n\r\n    get end(): any {\r\n\r\n        let end = this.start + this.itemsPerPage;\r\n\r\n        if (end > this.total) {\r\n\r\n            end = this.total;\r\n        }\r\n        return end;\r\n    }\r\n\r\n    get activeClass() {\r\n\r\n        return this.config?.classNames?.active || 'active';\r\n    }\r\n\r\n    get maxNumbers() {\r\n\r\n        if (this.config?.html?.maxNumbers) {\r\n            return parseInt(this.config?.html?.maxNumbers);\r\n        }\r\n\r\n        return 5;\r\n    }\r\n    constructor(items$, config) {\r\n\r\n        if (!items$?.length) {\r\n\r\n            console.error('The elements to be paginated is empty');\r\n\r\n            return;\r\n        }\r\n\r\n        if (!config.paginator$) {\r\n\r\n            console.error('The paginator wrapping element is empty');\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        this.items$ = items$;\r\n\r\n        this.paginator$ = config.paginator$;\r\n\r\n        this.config = config;\r\n\r\n        if (this.config.currentPage) {\r\n            this.currentPage = this.config.currentPage;\r\n            this.pageSelected = this.currentPage;\r\n        }\r\n\r\n        this.paginator$.innerHTML = '';\r\n\r\n\r\n        this.hideItems();\r\n\r\n\r\n        this.renderInfoText();\r\n\r\n        this.renderNav();\r\n\r\n    }\r\n\r\n\r\n    renderInfoText() {\r\n\r\n        if (!this.config.infoText) {\r\n\r\n            return;\r\n        }\r\n\r\n        let infoText$: any = this.paginator$.querySelector('.skriptx--paginator-info-text');\r\n\r\n        if (!infoText$) {\r\n            infoText$ = CreateElement('div', '', 'skriptx--paginator-info-text');\r\n            this.paginator$.append(infoText$);\r\n        }\r\n\r\n        const replaced = this.config.infoText\r\n            .replace(':start', (this.start + 1).toString())\r\n            .replace(':end', this.end.toString())\r\n            .replace(':filtered', this.filtered.toString())\r\n            .replace(':total', this.total.toString());\r\n        infoText$.innerHTML = replaced;\r\n\r\n    }\r\n\r\n    hideItems() {\r\n        if (this.config.server) {\r\n            return;\r\n        }\r\n        this.items$.forEach((item$, index) => {\r\n            item$.style.display = '';\r\n            if (index < this.start || index >= this.end) {\r\n                item$.style.display = 'none';\r\n            }\r\n        })\r\n    }\r\n\r\n    renderNav() {\r\n\r\n        let li;\r\n\r\n        const ul = CreateElement('ul', '', this.config?.classNames?.ul);\r\n\r\n        li = CreateNavButton(this.config, '&laquo;', 'first');\r\n\r\n        if (li) {\r\n\r\n            ul.append(li);\r\n\r\n        }\r\n\r\n        li = CreateNavButton(this.config, '&lsaquo;', 'prev');\r\n\r\n        if (li) {\r\n\r\n            ul.append(li);\r\n\r\n        }\r\n\r\n        if (this.config.html?.hasOwnProperty('number')) {\r\n            if (this.config.html.number) {\r\n                this.renderNumber(ul);\r\n            }\r\n\r\n        } else {\r\n\r\n            this.renderNumber(ul);\r\n        }\r\n\r\n\r\n\r\n\r\n        li = CreateNavButton(this.config, '&rsaquo;', 'next');\r\n\r\n        if (li) {\r\n\r\n            ul.append(li);\r\n\r\n        }\r\n\r\n        li = CreateNavButton(this.config, '&raquo;', 'last');\r\n\r\n        if (li) {\r\n\r\n            ul.append(li);\r\n\r\n        }\r\n\r\n\r\n        const nav = CreateElement('nav', '', this.config?.classNames?.nav);\r\n\r\n        nav.append(ul);\r\n\r\n        this.paginator$.append(nav);\r\n\r\n        this.captureNavButtons();\r\n\r\n        this.captureSelect();\r\n\r\n        this.disableButtons();\r\n\r\n    }\r\n\r\n    captureSelect() {\r\n\r\n        const nav = this.paginator$.querySelector(\"nav\");\r\n\r\n        const select: any = nav?.querySelector('select');\r\n\r\n        if (!select) {\r\n\r\n            return;\r\n        }\r\n\r\n        this.updateSelect();\r\n\r\n        select.addEventListener('change', () => {\r\n\r\n            this.pageSelected = parseInt(select.value);\r\n\r\n            this.onPageChange();\r\n\r\n        })\r\n    }\r\n\r\n    captureNavButtons() {\r\n\r\n        const nav = this.paginator$.querySelector(\"nav\");\r\n\r\n        const buttons: any = nav?.querySelectorAll('button');\r\n\r\n        if (!buttons?.length) {\r\n\r\n            return;\r\n        }\r\n        buttons.forEach(btn => {\r\n\r\n            btn.addEventListener('click', () => {\r\n\r\n                if (btn.classList.contains('number')) {\r\n                    this.pageSelected = parseInt(btn.innerText);\r\n                }\r\n                if (btn.classList.contains('first')) {\r\n                    this.pageSelected = 1;\r\n                }\r\n                if (btn.classList.contains('last')) {\r\n                    this.pageSelected = parseInt(this.totalPages);\r\n                }\r\n                if (btn.classList.contains('prev')) {\r\n                    this.pageSelected = this.currentPage - 1;\r\n                }\r\n                if (btn.classList.contains('next')) {\r\n                    this.pageSelected = this.currentPage + 1;\r\n                }\r\n\r\n                if (this.pageSelected < 1) {\r\n                    this.pageSelected = 1;\r\n                }\r\n                if (this.pageSelected > this.totalPages) {\r\n                    this.pageSelected = this.totalPages;\r\n                }\r\n\r\n                this.onPageChange();\r\n            })\r\n        })\r\n    }\r\n\r\n    onPageChange() {\r\n        this.emitOnPageChange();\r\n        if (this.config.server) {\r\n            this.paginator$.innerHTML = '';\r\n            return;\r\n        }\r\n        this.currentPage = this.pageSelected;\r\n        this.renderInfoText();\r\n        this.hideItems();\r\n        this.disableButtons();\r\n        this.updateSelect();\r\n\r\n    }\r\n\r\n    updateSelect() {\r\n\r\n        const nav = this.paginator$.querySelector(\"nav\");\r\n\r\n        const select: any = nav?.querySelector('select');\r\n\r\n        if (!select) {\r\n\r\n            return;\r\n        }\r\n\r\n\r\n        if (select.value != this.currentPage.toString()) {\r\n            select.value = this.currentPage;\r\n        }\r\n    }\r\n\r\n    emitOnPageChange() {\r\n\r\n        if (this.config.hasOwnProperty('onPageChange') && typeof (this.config.onPageChange) == 'function') {\r\n\r\n            this.config.onPageChange({ prev: this.currentPage, now: this.pageSelected });\r\n        }\r\n    }\r\n\r\n    renderNumber(ul) {\r\n        let li;\r\n        if (this.totalPages > this.maxNumbers) {\r\n\r\n            const select = CreateElement('select', '', this.config?.classNames?.select);\r\n            for (let i = 1; i <= this.totalPages; i++) {\r\n                const option = CreateElement('option', i, '', { value: i })\r\n\r\n                select.append(option)\r\n\r\n            }\r\n            const li = CreateElement('li');\r\n            const div = CreateElement('div', '', this.config?.classNames?.selectDiv);\r\n            div.append(select);\r\n            li.append(div);\r\n            ul.append(li);\r\n\r\n        } else {\r\n\r\n            for (let i = 1; i <= this.totalPages; i++) {\r\n\r\n                li = CreateListElement(i, 'number', this.config.classNames);\r\n\r\n                ul.append(li);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    disableButtons() {\r\n        const nav = this.paginator$.querySelector(\"nav\");\r\n\r\n        const buttons: any = nav?.querySelectorAll('button');\r\n\r\n        buttons.forEach(btn => {\r\n\r\n            EnableBtn(btn, this.activeClass);\r\n\r\n            if (btn.classList.contains('number')) {\r\n\r\n                if (parseInt(btn.innerText) == this.currentPage) {\r\n\r\n                    DisableBtn(btn, this.activeClass);\r\n                }\r\n\r\n            }\r\n            if (btn.classList.contains('first') || btn.classList.contains('prev')) {\r\n\r\n                if (this.currentPage == 1) {\r\n\r\n                    DisableBtn(btn, this.activeClass);\r\n                }\r\n\r\n            }\r\n            if (btn.classList.contains('last') || btn.classList.contains('next')) {\r\n\r\n                if (this.currentPage == this.totalPages) {\r\n\r\n                    DisableBtn(btn, this.activeClass);\r\n                }\r\n\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n}","export function  CreateElement(ele, html: any = '', classNames: string = '', attributes = {}) {\r\n    const ele$ = document.createElement(ele);\r\n    for (let key in attributes) {\r\n        ele$.setAttribute(key, attributes[key]);\r\n    }\r\n    const classNamesTrimmed = classNames.trim();\r\n    if (classNamesTrimmed) {\r\n        const classNamesSplitted = classNamesTrimmed.split(' ');\r\n        const classNamesMapped = classNamesSplitted.map(v => v.trim()).filter(v => v);\r\n        classNamesMapped.forEach(className => {\r\n            ele$.classList.add(className);\r\n        })\r\n    }\r\n\r\n    ele$.innerHTML = html;\r\n\r\n    return ele$;\r\n}\r\n","import { CreateElement } from \"./CreateElement\";\r\nimport { ClassNames } from \"../interfaces/Classnames\";\r\n\r\nexport function CreateListElement(content, btnClassname, classNames:ClassNames = {}) {\r\n    let li, btn, span;\r\n    li = CreateElement('li', '', classNames?.li);\r\n    btn = CreateElement('button', '', `page ${btnClassname} ${classNames?.button?classNames.button:''}`);\r\n    span = CreateElement('span', content, classNames?.span);\r\n    btn.append(span);\r\n    li.append(btn);\r\n    return li;\r\n}","import { CreateListElement } from \"./CreateListElement\";\r\nexport function CreateNavButton(config, defaultContent, key) {\r\n\r\n    if (config?.html?.hasOwnProperty(key)) {\r\n        if (config.html[key]) {\r\n            const trimmed = config?.html[key]?.toString().trim();\r\n            if(!trimmed){\r\n                return null;\r\n            }\r\n            return CreateListElement(trimmed, key, config.classNames);\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    return CreateListElement(defaultContent, key, config.classNames);\r\n\r\n}","export function EnableBtn(btn, activeClass) {\r\n    if (!btn.classList.contains('number')) {\r\n        btn.closest('li').classList.remove('disabled');\r\n    }\r\n    btn.removeAttribute('disabled');\r\n    btn.classList.remove(activeClass);\r\n}","export function   DisableBtn(btn, activeClass) {\r\n    if (!btn.classList.contains('number')) {\r\n        btn.closest('li').classList.add('disabled');\r\n    }\r\n    btn.setAttribute('disabled', true);\r\n    btn.classList.add(activeClass);\r\n}"],"names":[],"version":3,"file":"jspaginator.umd.js.map"}